{"version":3,"sources":["Components/Filter/index.js","Components/InterviewQuestion/index.js","Components/InterviewQuestionsApp/index.js","App.js","reportWebVitals.js","index.js"],"names":["Filter","renderDifficultyLevelOptions","props","levelsData","map","id","level","className","value","toUpperCase","onChangeLevel","event","onChangeDifficultyLevel","target","htmlFor","onChange","this","Component","scoreCount","InterviewQuestion","renderScoreCard","renderClickedValue","resetTimeAndProceedToNextQuestion","isClicked","fetchedDataWithTimer","correct_answer","clickedValue","textContent","console","log","renderOptions","option1","option2","option3","correctOptionClass","onClick","renderQuestion","questionNumber","timer","question","InterviewQuestionsApp","state","activeDifficultyLevel","fetchedQuestionData","isQuizStarted","setState","updateTimer","prevState","clearInterval","timeInterval","fetchData","a","fetch","response","json","data","fetchedData","results","questionDataToState","eachQuestion","incorrect_answers","setInterval","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33a5f0fc.chunk.js","sourcesContent":["import {Component} from 'react'\n\nimport './index.css'\n\nclass Filter extends Component {\n    \n    renderDifficultyLevelOptions = () => {\n        const {levelsData} = this.props\n\n        return levelsData.map(({id, level}) => (\n            <option key={id} className=\"option\" value={level}>\n              {level.toUpperCase()}\n            </option>\n          ))\n    }\n\n    onChangeLevel = event => {\n        const {onChangeDifficultyLevel} = this.props\n        const {value} = event.target\n    \n        return onChangeDifficultyLevel(value)\n      }\n   \n    render() {\n        return(\n            <div className=\"select-filters\">\n                <div className=\"select-options\">\n                    <label htmlFor=\"difficulty-level\" className=\"filter-name\">\n                        DIFFICULTY LEVEL\n                    </label>\n                    <select className=\"select-item\" onChange={event =>this.onChangeLevel(event)}>\n                        {this.renderDifficultyLevelOptions()}\n                    </select>\n                </div>\n          </div>\n        )\n    }\n}\n\nexport default Filter","import {Component} from 'react'\n\nimport './index.css'\n\nlet scoreCount = 0\n\nclass InterviewQuestion extends Component {\n\n    renderScoreCard = () => {\n        return <div className=\"score-card\">\n            <h1>TIME IS UP</h1>\n            <h1 className='heading'>Your Score : {scoreCount}</h1>\n        </div>\n    }\n\n    renderClickedValue = (event) => {\n        \n        const {resetTimeAndProceedToNextQuestion,isClicked} = this.props\n        \n        const {fetchedDataWithTimer=\"\"} = this.props;\n        const {correct_answer}=fetchedDataWithTimer\n \n        let clickedValue = event.target.textContent;\n        console.log(\"event object\",event.target)\n        \n        if(clickedValue===correct_answer){\n            scoreCount+=1\n            console.log(scoreCount)\n            \n            return resetTimeAndProceedToNextQuestion(event)\n        }else{\n            console.log(\"Wrong Answer\")\n        }\n    }\n\n    renderOptions = (correct_answer,option1,option2,option3) => {\n        const {isClicked} = this.props\n        const correctOptionClass = isClicked ? \"correct-ans\":\"option\"\n        console.log(\"Render Options Function Called\")\n        console.log(correctOptionClass)\n        if(option2===\"\"){\n            return <div>\n                <li className=\"option\" onClick={this.renderClickedValue} value={option1}>{option1}</li>\n                <li className=\"option\" onClick={this.renderClickedValue} value={correct_answer}>{correct_answer}</li>\n\n            </div>\n        }\n        return <div>\n            \n            <li className= {`${correctOptionClass}`}value={correct_answer} onClick={this.renderClickedValue} >{correct_answer}</li>\n            <li className=\"option\" value={option1} onClick={this.renderClickedValue} >{option1}</li>\n            <li className=\"option\" value={option2} onClick={this.renderClickedValue} >{option2}</li>\n            <li className=\"option\"  value={option3}onClick={this.renderClickedValue} >{option3}</li>\n        </div>\n    }\n    \n\n\n    renderQuestion = () => {\n        const {fetchedDataWithTimer=\"\"} = this.props;\n        const {questionNumber,timer} = this.props\n        \n        const { question=\"Click on Start Quiz Button to start the quiz\", correct_answer=\"correct ans\",option1=\"\",option2=\"\",option3=\"\"} = fetchedDataWithTimer\n\n        return <div >\n        <div className=\"heading-container\">\n            <div className=\"score-container\">\n                <p className=\"score\">SCORE</p>\n                <p className=\"count\">{scoreCount}/10</p>\n            </div>\n            <h1 className=\"heading\">Question {questionNumber+1} of 10</h1>\n            <div className=\"time-container\">\n                <p className=\"score\">TIME</p>\n                <p className=\"count\">{timer} sec(s)</p>\n            </div>\n        </div>\n        \n        \n        <p className=\"question\">{questionNumber+1}.{question}</p>\n        <ul className=\"option-container\" >\n            {this.renderOptions(correct_answer,option1,option2,option3)}\n        </ul>\n    </div>\n    }\n    \n    \n    render(){\n        // const {fetchedDataWithTimer=\"\"} = this.props;\n         const {questionNumber} = this.props\n        // const { question=\"Click on Start Quiz Button to start the quiz\", correct_answer=\"correcti ans\",option1=\"\",option2=\"\",option3=\"\"} = fetchedDataWithTimer\n       \n            return(\n                <div className=\"question-container\">\n                    {\n                    questionNumber===10 ? this.renderScoreCard() : this.renderQuestion()\n                }\n                </div>\n                \n            )\n    }\n}\n\nexport default InterviewQuestion","import {Component} from 'react'\n\nimport Filter from '../Filter'\nimport InterviewQuestion from '../InterviewQuestion'\nimport './index.css'\n\n\nclass InterviewQuestionsApp extends Component{\n    state = {\n        activeDifficultyLevel: 'easy',\n        fetchedQuestionData :[],\n        questionNumber:0,\n        timer:0,\n        isQuizStarted:false,\n        isClicked:false\n        \n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timeInterval)\n      }\n\n    onChangeDifficultyLevel = value => {\n        this.setState({\n            activeDifficultyLevel:value\n        })\n    }\n\n    resetTimeAndProceedToNextQuestion = value =>{\n        //clearInterval(this.timeInterval)\n        this.setState({\n            timer:9,\n            isClicked:true,\n        })\n    }\n\n    updateTimer = () => {\n        const {timer,questionNumber}= this.state\n        if(timer>=10){\n            \n            this.setState(prevState =>({\n                timer:0,\n                questionNumber:prevState.questionNumber+1,\n                \n            }))\n        }\n        else{\n            this.setState(prevState =>({\n                isQuizStarted:true,\n                timer:prevState.timer+1,\n                isClicked:false,\n            }))\n        }\n        if(questionNumber===10)\n        {\n            clearInterval(this.timeInterval)\n            \n        }\n    }\n\n    // setQuestionsData = (questionDataToState) =>{\n        \n    // }\n\n    fetchData = async () => {\n        const {activeDifficultyLevel}= this.state\n        \n        const response = await fetch(`https://opentdb.com/api.php?amount=10&category=18&difficulty=${activeDifficultyLevel}`)\n        const data = await response.json()\n        const fetchedData = data.results\n        const questionDataToState = fetchedData.map(eachQuestion =>({\n            question:eachQuestion.question,\n            correct_answer:eachQuestion.correct_answer,\n            option1:eachQuestion.incorrect_answers[0],\n            option2:eachQuestion.incorrect_answers[1],\n            option3:eachQuestion.incorrect_answers[2]\n        }))\n\n        this.setState({\n            fetchedQuestionData:questionDataToState\n        })\n        this.timeInterval=setInterval(this.updateTimer, 1000);\n        \n    }\n    render(){\n        const {levelsData}=this.props\n        \n         //const questionDataFromAPI =  this.fetchData();\n        const {fetchedQuestionData,questionNumber,timer,isQuizStarted,isClicked} = this.state\n        \n        const fetchedDataWithTimer = fetchedQuestionData[questionNumber]\n\n        //console.log(\"with timer\",fetchedDataWithTimer)\n        return(\n            <div className=\"app-container\">\n                <h1 className=\"heading\">\n                    Interview Quiz Application\n                </h1>\n                <Filter levelsData={levelsData} onChangeDifficultyLevel={this.onChangeDifficultyLevel}/>\n                {isQuizStarted ? <InterviewQuestion fetchedDataWithTimer={fetchedDataWithTimer} \n                questionNumber={questionNumber}\n                timer={timer}\n                resetTimeAndProceedToNextQuestion={this.resetTimeAndProceedToNextQuestion}\n                isClicked ={isClicked}\n                /> : \"Click the below button to start Quiz\"}\n                <div className=\"button-container\">\n                <button className=\"start-button\" onClick={this.fetchData}>Start Quiz</button>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default InterviewQuestionsApp\n","import InterviewQuestionsApp from './Components/InterviewQuestionsApp'\nimport './App.css';\n\nconst levelsData = [\n  {\n    id: 1,\n    level: 'easy',\n  },\n  {\n    id: 2,\n    level: 'medium',\n  },\n  {\n    id: 3,\n    level: 'hard',\n  },\n]\n\nconst App = () => (\n  <InterviewQuestionsApp levelsData={levelsData}/>\n)\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}